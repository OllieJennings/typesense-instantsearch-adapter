{"version":3,"sources":["../src/Configuration.js"],"names":["Configuration","options","server","nodes","host","port","path","protocol","cacheSearchResultsForSeconds","additionalSearchParameters","query_by","queryBy","preset","sort_by","sortBy","highlight_full_fields","highlightFullFields","geoLocationField","collectionSpecificSearchParameters","Object","keys","forEach","collection","params","key","undefined","values","some","c","console","warn","length","Error"],"mappings":"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","sourcesContent":["\"use strict\";\n\nexport class Configuration {\n  constructor(options = {}) {\n    this.server = options.server || {\n      nodes: [\n        {\n          host: \"localhost\",\n          port: \"8108\",\n          path: \"\",\n          protocol: \"http\",\n        },\n      ],\n    };\n\n    this.server.cacheSearchResultsForSeconds = this.server.cacheSearchResultsForSeconds ?? 2 * 60;\n\n    this.additionalSearchParameters = options.additionalSearchParameters ?? {};\n\n    this.additionalSearchParameters.query_by =\n      this.additionalSearchParameters.queryBy ?? this.additionalSearchParameters.query_by ?? \"\";\n\n    this.additionalSearchParameters.preset =\n      this.additionalSearchParameters.preset ?? this.additionalSearchParameters.preset ?? \"\";\n\n    this.additionalSearchParameters.sort_by =\n      this.additionalSearchParameters.sortBy ?? this.additionalSearchParameters.sort_by ?? \"\";\n\n    this.additionalSearchParameters.highlight_full_fields =\n      this.additionalSearchParameters.highlightFullFields ??\n      this.additionalSearchParameters.highlight_full_fields ??\n      this.additionalSearchParameters.query_by;\n\n    this.geoLocationField = options.geoLocationField ?? \"_geoloc\";\n\n    this.collectionSpecificSearchParameters = options.collectionSpecificSearchParameters ?? {};\n\n    Object.keys(this.collectionSpecificSearchParameters).forEach((collection) => {\n      const params = this.collectionSpecificSearchParameters[collection];\n      params.query_by = params.queryBy ?? params.query_by;\n      params.preset = params.preset ?? params.preset;\n      params.sort_by = params.sortBy ?? params.sort_by;\n      params.highlight_full_fields =\n        params.highlightFullFields ??\n        params.highlight_full_fields ??\n        this.additionalSearchParameters.highlight_full_fields ??\n        params.query_by;\n\n      // Remove undefined values\n      Object.keys(params).forEach((key) => (params[key] === undefined ? delete params[key] : {}));\n    });\n  }\n\n  validate() {\n    // Warn if camelCased parameters are used, suggest using snake_cased parameters instead\n    if (\n      this.additionalSearchParameters.queryBy ||\n      Object.values(this.collectionSpecificSearchParameters).some((c) => c.queryBy)\n    ) {\n      console.warn(\n        \"[typesense-instantsearch-adapter] Please use snake_cased versions of parameters in additionalSearchParameters instead of camelCased parameters. For example: Use query_by instead of queryBy. camelCased parameters will be deprecated in a future version.\" +\n          \" We're making this change so that parameter names are identical to the ones sent to Typesense (which are all snake_cased), and to also keep the types for these parameters in sync with the types defined in typesense-js.\"\n      );\n    }\n\n    /*\n     * Either additionalSearchParameters.query_by or additionalSearchParameters.preset needs to be set, or\n     *   All collectionSpecificSearchParameters need to have query_by or preset\n     *\n     * */\n    if (\n      this.additionalSearchParameters.query_by.length === 0 &&\n      this.additionalSearchParameters.preset.length === 0 &&\n      (Object.keys(this.collectionSpecificSearchParameters).length === 0 ||\n        Object.values(this.collectionSpecificSearchParameters).some(\n          (c) => (c.query_by || \"\").length === 0 && (c.preset || \"\").length === 0\n        ))\n    ) {\n      throw new Error(\n        \"[typesense-instantsearch-adapter] Missing parameter: One of additionalSearchParameters.query_by or additionalSearchParameters.preset needs to be set, or all collectionSpecificSearchParameters need to have either .query_by or .preset set.\"\n      );\n    }\n  }\n}\n"],"file":"Configuration.js"}