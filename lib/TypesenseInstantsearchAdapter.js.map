{"version":3,"file":"TypesenseInstantsearchAdapter.js","names":["_asyncToGenerator","_classCallCheck","_createClass","_regeneratorRuntime","Configuration","SearchClient","TypesenseSearchClient","SearchRequestAdapter","SearchResponseAdapter","FacetSearchResponseAdapter","TypesenseInstantsearchAdapter","options","_this","updateConfiguration","searchClient","clearCache","search","instantsearchRequests","searchTypesenseAndAdapt","searchForFacetValues","searchTypesenseForFacetValuesAndAdapt","key","value","_searchTypesenseAndAdapt","mark","_callee","_this2","typesenseResponse","responseAdapter","adaptedResponse","adaptedResponses","_adaptedResponses","wrap","_callee$","_context","prev","next","_adaptAndPerformTypesenseRequest","sent","union_request_params","_validateTypesenseResult","configuration","adapt","map","abrupt","results","typesenseResult","index","t0","console","error","stop","_x","apply","arguments","_searchTypesenseForFacetValuesAndAdapt","_callee2","_this3","_callee2$","_context2","_x2","_adaptAndPerformTypesenseRequest2","_callee3","requestAdapter","_callee3$","_context3","typesenseClient","request","_x3","server","validate","Error","concat","code","hits","grouped_hits","default"],"sources":["../src/TypesenseInstantsearchAdapter.js"],"sourcesContent":["\"use strict\";\n\nimport { Configuration } from \"./Configuration\";\nimport { SearchClient as TypesenseSearchClient } from \"typesense\";\nimport { SearchRequestAdapter } from \"./SearchRequestAdapter\";\nimport { SearchResponseAdapter } from \"./SearchResponseAdapter\";\nimport { FacetSearchResponseAdapter } from \"./FacetSearchResponseAdapter\";\n\nexport default class TypesenseInstantsearchAdapter {\n  constructor(options) {\n    this.updateConfiguration(options);\n    this.searchClient = {\n      clearCache: () => this.clearCache(),\n      search: (instantsearchRequests) => this.searchTypesenseAndAdapt(instantsearchRequests),\n      searchForFacetValues: (instantsearchRequests) =>\n        this.searchTypesenseForFacetValuesAndAdapt(instantsearchRequests),\n    };\n  }\n\n  async searchTypesenseAndAdapt(instantsearchRequests) {\n    let typesenseResponse;\n    try {\n      typesenseResponse = await this._adaptAndPerformTypesenseRequest(instantsearchRequests);\n\n      // Check if this is a union search response\n      if (typesenseResponse.union_request_params) {\n        // Handle union search response - single unified response\n        this._validateTypesenseResult(typesenseResponse);\n        const responseAdapter = new SearchResponseAdapter(\n          typesenseResponse,\n          instantsearchRequests[0], // Use first request as base\n          this.configuration,\n          [typesenseResponse], // Pass single response as allTypesenseResults\n          typesenseResponse,\n        );\n        let adaptedResponse = responseAdapter.adapt();\n\n        // InstantSearch expects one result per request, so return the same adapted response for each request\n        const adaptedResponses = instantsearchRequests.map(() => adaptedResponse);\n\n        return {\n          results: adaptedResponses,\n        };\n      } else {\n        // Handle regular multi-search response - multiple separate responses\n        const adaptedResponses = typesenseResponse.results.map((typesenseResult, index) => {\n          this._validateTypesenseResult(typesenseResult);\n          const responseAdapter = new SearchResponseAdapter(\n            typesenseResult,\n            instantsearchRequests[index],\n            this.configuration,\n            typesenseResponse.results,\n            typesenseResponse,\n          );\n          let adaptedResponse = responseAdapter.adapt();\n\n          return adaptedResponse;\n        });\n\n        return {\n          results: adaptedResponses,\n        };\n      }\n    } catch (error) {\n      console.error(error);\n      throw error;\n    }\n  }\n\n  async searchTypesenseForFacetValuesAndAdapt(instantsearchRequests) {\n    let typesenseResponse;\n    try {\n      typesenseResponse = await this._adaptAndPerformTypesenseRequest(instantsearchRequests);\n\n      const adaptedResponses = typesenseResponse.results.map((typesenseResult, index) => {\n        this._validateTypesenseResult(typesenseResult);\n        const responseAdapter = new FacetSearchResponseAdapter(\n          typesenseResult,\n          instantsearchRequests[index],\n          this.configuration,\n        );\n        return responseAdapter.adapt();\n      });\n\n      return adaptedResponses;\n    } catch (error) {\n      console.error(error);\n      throw error;\n    }\n  }\n\n  async _adaptAndPerformTypesenseRequest(instantsearchRequests) {\n    const requestAdapter = new SearchRequestAdapter(instantsearchRequests, this.typesenseClient, this.configuration);\n    const typesenseResponse = await requestAdapter.request();\n    return typesenseResponse;\n  }\n\n  clearCache() {\n    this.typesenseClient = new TypesenseSearchClient(this.configuration.server);\n    return this.searchClient;\n  }\n\n  updateConfiguration(options) {\n    this.configuration = new Configuration(options);\n    this.configuration.validate();\n    this.typesenseClient = new TypesenseSearchClient(this.configuration.server);\n    return true;\n  }\n\n  _validateTypesenseResult(typesenseResult) {\n    if (typesenseResult.error) {\n      throw new Error(`${typesenseResult.code} - ${typesenseResult.error}`);\n    }\n    if (!typesenseResult.hits && !typesenseResult.grouped_hits) {\n      throw new Error(`Did not find any hits. ${typesenseResult.code} - ${typesenseResult.error}`);\n    }\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAAC,OAAAA,iBAAA;AAAA,OAAAC,eAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,mBAAA;AAEb,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,YAAY,IAAIC,qBAAqB,QAAQ,WAAW;AACjE,SAASC,oBAAoB,QAAQ,wBAAwB;AAC7D,SAASC,qBAAqB,QAAQ,yBAAyB;AAC/D,SAASC,0BAA0B,QAAQ,8BAA8B;AAAC,IAErDC,6BAA6B;EAChD,SAAAA,8BAAYC,OAAO,EAAE;IAAA,IAAAC,KAAA;IAAAX,eAAA,OAAAS,6BAAA;IACnB,IAAI,CAACG,mBAAmB,CAACF,OAAO,CAAC;IACjC,IAAI,CAACG,YAAY,GAAG;MAClBC,UAAU,EAAE,SAAAA,WAAA;QAAA,OAAMH,KAAI,CAACG,UAAU,CAAC,CAAC;MAAA;MACnCC,MAAM,EAAE,SAAAA,OAACC,qBAAqB;QAAA,OAAKL,KAAI,CAACM,uBAAuB,CAACD,qBAAqB,CAAC;MAAA;MACtFE,oBAAoB,EAAE,SAAAA,qBAACF,qBAAqB;QAAA,OAC1CL,KAAI,CAACQ,qCAAqC,CAACH,qBAAqB,CAAC;MAAA;IACrE,CAAC;EACH;EAAC,OAAAf,YAAA,CAAAQ,6BAAA;IAAAW,GAAA;IAAAC,KAAA;MAAA,IAAAC,wBAAA,GAAAvB,iBAAA,eAAAG,mBAAA,CAAAqB,IAAA,CAED,SAAAC,QAA8BR,qBAAqB;QAAA,IAAAS,MAAA;QAAA,IAAAC,iBAAA,EAAAC,eAAA,EAAAC,eAAA,EAAAC,gBAAA,EAAAC,iBAAA;QAAA,OAAA5B,mBAAA,CAAA6B,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAGrB,IAAI,CAACC,gCAAgC,CAACpB,qBAAqB,CAAC;YAAA;cAAtFU,iBAAiB,GAAAO,QAAA,CAAAI,IAAA;cAAA,KAGbX,iBAAiB,CAACY,oBAAoB;gBAAAL,QAAA,CAAAE,IAAA;gBAAA;cAAA;cACxC;cACA,IAAI,CAACI,wBAAwB,CAACb,iBAAiB,CAAC;cAC1CC,eAAe,GAAG,IAAIpB,qBAAqB,CAC/CmB,iBAAiB,EACjBV,qBAAqB,CAAC,CAAC,CAAC;cAAE;cAC1B,IAAI,CAACwB,aAAa,EAClB,CAACd,iBAAiB,CAAC;cAAE;cACrBA,iBACF,CAAC;cACGE,eAAe,GAAGD,eAAe,CAACc,KAAK,CAAC,CAAC,EAE7C;cACMZ,gBAAgB,GAAGb,qBAAqB,CAAC0B,GAAG,CAAC;gBAAA,OAAMd,eAAe;cAAA,EAAC;cAAA,OAAAK,QAAA,CAAAU,MAAA,WAElE;gBACLC,OAAO,EAAEf;cACX,CAAC;YAAA;cAED;cACMA,iBAAgB,GAAGH,iBAAiB,CAACkB,OAAO,CAACF,GAAG,CAAC,UAACG,eAAe,EAAEC,KAAK,EAAK;gBACjFrB,MAAI,CAACc,wBAAwB,CAACM,eAAe,CAAC;gBAC9C,IAAMlB,eAAe,GAAG,IAAIpB,qBAAqB,CAC/CsC,eAAe,EACf7B,qBAAqB,CAAC8B,KAAK,CAAC,EAC5BrB,MAAI,CAACe,aAAa,EAClBd,iBAAiB,CAACkB,OAAO,EACzBlB,iBACF,CAAC;gBACD,IAAIE,eAAe,GAAGD,eAAe,CAACc,KAAK,CAAC,CAAC;gBAE7C,OAAOb,eAAe;cACxB,CAAC,CAAC;cAAA,OAAAK,QAAA,CAAAU,MAAA,WAEK;gBACLC,OAAO,EAAEf;cACX,CAAC;YAAA;cAAAI,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAc,EAAA,GAAAd,QAAA;cAGHe,OAAO,CAACC,KAAK,CAAAhB,QAAA,CAAAc,EAAM,CAAC;cAAC,MAAAd,QAAA,CAAAc,EAAA;YAAA;YAAA;cAAA,OAAAd,QAAA,CAAAiB,IAAA;UAAA;QAAA,GAAA1B,OAAA;MAAA,CAGxB;MAAA,SAAAP,wBAAAkC,EAAA;QAAA,OAAA7B,wBAAA,CAAA8B,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAApC,uBAAA;IAAA;EAAA;IAAAG,GAAA;IAAAC,KAAA;MAAA,IAAAiC,sCAAA,GAAAvD,iBAAA,eAAAG,mBAAA,CAAAqB,IAAA,CAED,SAAAgC,SAA4CvC,qBAAqB;QAAA,IAAAwC,MAAA;QAAA,IAAA9B,iBAAA,EAAAG,gBAAA;QAAA,OAAA3B,mBAAA,CAAA6B,IAAA,UAAA0B,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAxB,IAAA,GAAAwB,SAAA,CAAAvB,IAAA;YAAA;cAAAuB,SAAA,CAAAxB,IAAA;cAAAwB,SAAA,CAAAvB,IAAA;cAAA,OAGnC,IAAI,CAACC,gCAAgC,CAACpB,qBAAqB,CAAC;YAAA;cAAtFU,iBAAiB,GAAAgC,SAAA,CAAArB,IAAA;cAEXR,gBAAgB,GAAGH,iBAAiB,CAACkB,OAAO,CAACF,GAAG,CAAC,UAACG,eAAe,EAAEC,KAAK,EAAK;gBACjFU,MAAI,CAACjB,wBAAwB,CAACM,eAAe,CAAC;gBAC9C,IAAMlB,eAAe,GAAG,IAAInB,0BAA0B,CACpDqC,eAAe,EACf7B,qBAAqB,CAAC8B,KAAK,CAAC,EAC5BU,MAAI,CAAChB,aACP,CAAC;gBACD,OAAOb,eAAe,CAACc,KAAK,CAAC,CAAC;cAChC,CAAC,CAAC;cAAA,OAAAiB,SAAA,CAAAf,MAAA,WAEKd,gBAAgB;YAAA;cAAA6B,SAAA,CAAAxB,IAAA;cAAAwB,SAAA,CAAAX,EAAA,GAAAW,SAAA;cAEvBV,OAAO,CAACC,KAAK,CAAAS,SAAA,CAAAX,EAAM,CAAC;cAAC,MAAAW,SAAA,CAAAX,EAAA;YAAA;YAAA;cAAA,OAAAW,SAAA,CAAAR,IAAA;UAAA;QAAA,GAAAK,QAAA;MAAA,CAGxB;MAAA,SAAApC,sCAAAwC,GAAA;QAAA,OAAAL,sCAAA,CAAAF,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAlC,qCAAA;IAAA;EAAA;IAAAC,GAAA;IAAAC,KAAA;MAAA,IAAAuC,iCAAA,GAAA7D,iBAAA,eAAAG,mBAAA,CAAAqB,IAAA,CAED,SAAAsC,SAAuC7C,qBAAqB;QAAA,IAAA8C,cAAA,EAAApC,iBAAA;QAAA,OAAAxB,mBAAA,CAAA6B,IAAA,UAAAgC,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA9B,IAAA,GAAA8B,SAAA,CAAA7B,IAAA;YAAA;cACpD2B,cAAc,GAAG,IAAIxD,oBAAoB,CAACU,qBAAqB,EAAE,IAAI,CAACiD,eAAe,EAAE,IAAI,CAACzB,aAAa,CAAC;cAAAwB,SAAA,CAAA7B,IAAA;cAAA,OAChF2B,cAAc,CAACI,OAAO,CAAC,CAAC;YAAA;cAAlDxC,iBAAiB,GAAAsC,SAAA,CAAA3B,IAAA;cAAA,OAAA2B,SAAA,CAAArB,MAAA,WAChBjB,iBAAiB;YAAA;YAAA;cAAA,OAAAsC,SAAA,CAAAd,IAAA;UAAA;QAAA,GAAAW,QAAA;MAAA,CACzB;MAAA,SAAAzB,iCAAA+B,GAAA;QAAA,OAAAP,iCAAA,CAAAR,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAjB,gCAAA;IAAA;EAAA;IAAAhB,GAAA;IAAAC,KAAA,EAED,SAAAP,WAAA,EAAa;MACX,IAAI,CAACmD,eAAe,GAAG,IAAI5D,qBAAqB,CAAC,IAAI,CAACmC,aAAa,CAAC4B,MAAM,CAAC;MAC3E,OAAO,IAAI,CAACvD,YAAY;IAC1B;EAAC;IAAAO,GAAA;IAAAC,KAAA,EAED,SAAAT,oBAAoBF,OAAO,EAAE;MAC3B,IAAI,CAAC8B,aAAa,GAAG,IAAIrC,aAAa,CAACO,OAAO,CAAC;MAC/C,IAAI,CAAC8B,aAAa,CAAC6B,QAAQ,CAAC,CAAC;MAC7B,IAAI,CAACJ,eAAe,GAAG,IAAI5D,qBAAqB,CAAC,IAAI,CAACmC,aAAa,CAAC4B,MAAM,CAAC;MAC3E,OAAO,IAAI;IACb;EAAC;IAAAhD,GAAA;IAAAC,KAAA,EAED,SAAAkB,yBAAyBM,eAAe,EAAE;MACxC,IAAIA,eAAe,CAACI,KAAK,EAAE;QACzB,MAAM,IAAIqB,KAAK,IAAAC,MAAA,CAAI1B,eAAe,CAAC2B,IAAI,SAAAD,MAAA,CAAM1B,eAAe,CAACI,KAAK,CAAE,CAAC;MACvE;MACA,IAAI,CAACJ,eAAe,CAAC4B,IAAI,IAAI,CAAC5B,eAAe,CAAC6B,YAAY,EAAE;QAC1D,MAAM,IAAIJ,KAAK,2BAAAC,MAAA,CAA2B1B,eAAe,CAAC2B,IAAI,SAAAD,MAAA,CAAM1B,eAAe,CAACI,KAAK,CAAE,CAAC;MAC9F;IACF;EAAC;AAAA;AAAA,SA5GkBxC,6BAA6B,IAAAkE,OAAA","ignoreList":[]}